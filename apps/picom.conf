# Thank you code_nomad: http://9m.no/ꪯ鵞
# and Arch Wiki contributors: https://wiki.archlinux.org/index.php/Compton

#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "egl";

#################################
#
# GLX backend
#
#################################

glx-no-stencil = true;
use-damage = false;
# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modif>
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# My tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
glx-use-copysubbuffermesa = false;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break thin>
# Recommended if it works.
glx-no-rebind-pixmap = true;

# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
#glx-swap-method = "undefined";

#################################
#
# Other
#
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/O>
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACI>
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Vertical synchronization: match the refresh rate of the monitor
vsync = true;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

# Limit compton to repaint at most once every 1 / refresh_rate second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti'>
# unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for>
# Known to cause flickering when redirecting/unredirecting windows.
unredir-if-possible = false;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [
    "class_g = 'Peek'",
    "class_g = 'Rofi'"
];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the s>
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the s>
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

# Shadow
# Enabled client-side shadows on windows.
shadow = false;

#################################
#
# Opacity
#
#################################

inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;

# Dim inactive windows. (0.0 - 1.0)
inactive-dim = 0.1;
# Do not let dimness adjust based on window opacity.
inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is >
# blur-background = true;
# Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = false;
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'",
    "class_g = 'slop'"
];

opacity-rule = [
    "99:class_g = 'Peek'",
    "99:class_g = 'Termine' && focused",
    "95:class_g = 'Termite' && !focused",
    "99:class_g = 'org.wezfurlong.wezterm' && focused",
    "95:class_g = 'org.wezfurlong.wezterm' && !focused"
];

#################################
#
# Fading
#
#################################

fading = true;
fade-in-step = 0.07;
fade-out-step = 0.07;
fade-delta =3;

no-fading-openclose = true
no-fading-destroyed-argb = true

fade-exclude = [
  "class_g = 'slop'",   # maim
  "class_g = 'rofi'",
  "class_g = 'find-cursor'",
  "class_g = 'xfce4-find-cursor'",
]

#################################
#
# Window type settings
#
#################################
wintypes:
{
    tooltip = {
        fade = true;
        shadow = false;
        opacity = 0.85;
        focus = true;
    };

    notify = {
        fade = true;
        opacity = 0.95;
    };

    utility       = { shadow = false; };
    dock          = { shadow = false; clip-shadow-above = true; };
    dnd           = { shadow = false; };
    menu          = { opacity = false; shadow = false;};
    dropdown_menu = { opacity = false; };
    popup_menu    = { opacity = false; };
};
