#!/bin/bash
#
# Copyright (C) 2015 BarbUk
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
set -o errexit -o nounset

readonly rsync_options=(--archive -zz --copy-links --no-owner --no-group --sparse --partial --info=progress2 --human-readable)
readonly ssh_options=(-o PreferredAuthentications=publickey)
readonly fzf="fzf --select-1 --height 30% --tiebreak=begin,index --reverse --inline-info"
readonly dotdir="$HOME/.dotfiles"
readonly hostname_list="$dotdir/bin/give_me_hostname ssh"
readonly tmux_session_name="julien"

host="${1:-$($hostname_list | $fzf)}"

if [[ ${host} == *@* ]]; then
  resolvable_host="${host/*@/}"
else
  resolvable_host=${host}
fi

if ! ipv4_validation "$resolvable_host" >/dev/null 2>&1; then

  if ! $hostname_list | grep -qF "$resolvable_host"; then

    # Check if we can resolv the host
    if [ "$(uname)" = "Darwin" ]; then
      resolve="$(dscacheutil -q host -a name "$resolvable_host" | wc -l)"
    else
      resolve="$(getent hosts "$resolvable_host" | wc -l)"
    fi

    if [[ $resolve -eq 0 ]]; then
      host="$($hostname_list | $fzf --query="$host")"
    fi

  fi

fi

rsync "${rsync_options[@]}" --rsh "ssh ${ssh_options[*]}" \
  --exclude-from "$dotdir/apps/rsync_exclude.list" \
  "$dotdir/server/" \
  "$host": || true

# Set terminal title
echo -ne "\\033]0;$host\\007"

# shellcheck disable=SC2029
ssh "${ssh_options[@]}" -tt "$host" "
if ! hash tmux 2>/dev/null; then
  bash
  exit
fi

if test \$SSH_AUTH_SOCK; then
  ln -sf \$SSH_AUTH_SOCK ~/.ssh/ssh_auth_sock
fi

export tmux_connect_hostname=$host
exec tmux new-session -A -s $tmux_session_name
"
exit
