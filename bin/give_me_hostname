#!/usr/bin/env bash

readonly mode="$1"

set -e -o pipefail -o nounset

dsh_hosts() {
    local hosts file
    file="$HOME/.dsh/group/all"
    if [ -f "$file" ]; then
        hosts=$(grep -vE '^#' "$file")
        echo "$hosts"
    fi
}

my_hosts() {
    local hosts file
    file="$HOME/.ssh/hosts"
    if [ -f "$file" ]; then
        hosts=$(grep -vE '^#' "$file")
        echo "$hosts"
    fi
}

known_hosts() {
    local hosts file
    file="$HOME/.ssh/known_hosts"
    if [ -f "$file" ]; then
        hosts=$(awk '{print $1}' "$file" | grep -v ^\| | cut -d, -f 1 | sed -e 's/\[//g' | sed -e 's/\]//g' | cut -d: -f1 | grep -v ssh-rsa)
        echo "$hosts"
    fi
}

alfred() {
# {"items": [
#     {
#         "uid": "desktop",
#         "type": "file",
#         "title": "Desktop",
#         "subtitle": "~/Desktop",
#         "arg": "~/Desktop",
#         "autocomplete": "Desktop",
#         "icon": {
#             "type": "fileicon",
#             "path": "~/Desktop"
#         }
#     }
# ]}
    echo '{"items": ['
    for line in $(dsh_hosts); do
        echo '{'
        echo '"uid": "'"$line"'",'
        echo '"type": "default",'
        echo '"title": "'"$line"'",'
        echo '"subtitle": "~/Desktop",'
        echo '"arg": "'"$line"'",'
        echo '"autocomplete": "'"$line"'",'
        echo '}'
    done
    echo ']}'
}

case "$mode" in
    "dsh")
        dsh_hosts | sort -u
        ;;
    "hosts")
        known_hosts | sort -u
        ;;
    "alfred")
        alfred
    ;;
    *)
        (
            dsh_hosts
            known_hosts
        ) | sort -u
        ;;
esac

exit 0
