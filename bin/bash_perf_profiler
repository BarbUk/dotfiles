#!/usr/bin/env python
import argparse
import datetime
import heapq

parser = argparse.ArgumentParser(description='Analyze bashstart log for speed.')
parser.add_argument('filename', help='often /tmp/bashstart.<PID>.log')
parser.add_argument('-n', default=20, help='number of results to show')
args = parser.parse_args()
filename, n = args.filename, int(args.n)

with open(filename, 'r') as f:
    q = []
    prev_time = None
    total_time = datetime.timedelta(microseconds=0)
    total_lines = 1
    for line in f.readlines():
        line = line.split()
        try:
            if len(line) < 3:
                continue
            if '+' not in line[0]:
                continue
            text = ' '.join(line[2:])
            timestamp = line[1]
            # seconds, milliseconds = line[1].split('.')
            time = float(timestamp)
            time = datetime.datetime.fromtimestamp(time)
            
            # print(time.microseconds)
            # continue
            if prev_time is not None and prev_time > time:
                continue

            diff = time - prev_time if prev_time is not None else datetime.timedelta(microseconds=0)
            # print(diff.microseconds)
            # print(diff, text)
            prev_time = time
            total_time += diff
            total_lines += 1
            heapq.heappush(q, (diff.microseconds, text))
        except IndexError:
            print('error')

for diff, text in heapq.nlargest(n, q):
    print(diff / 1e3, 'ms:', text)

print('Total time: ', total_time.microseconds / 1e3, ' ms')
print('Total lines', total_lines)
